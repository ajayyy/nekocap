server {
    listen 80 default_server;
    server_name  localhost;
    listen [::]:80 default_server;

    gzip on;
    gzip_types text/plain application/xml text/css application/javascript;

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    gzip on;
    gzip_types text/plain application/xml text/css application/javascript;

# Uncomment and supply your own certificate path
#    ssl_certificate /path/to/cert;
#    ssl_certificate_key /path/to/key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

# Uncomment and supply your own path
#    curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam
#    ssl_dhparam /path/to/dhparam;

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
# Uncomment and supply your own path
#    ssl_trusted_certificate /path/to/trusted/cert;

    # replace with the IP address of your resolver
    resolver 127.0.0.1;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }
}